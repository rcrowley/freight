#!/bin/sh

# Add a package to the Freight library.

set -e

# Combined usage message and help screen.
usage() {
	echo "Usage: $(basename $0) [-c <conf>] [-v] [-h] <package> <manager>/<distro>..." >&2
	[ -n "$1" ] && {
		echo "  -c <conf>, --conf=<conf> config file to parse" >&2
		echo "  -v, --verbose            verbose mode" >&2
		echo "  -h, --help               show this help message" >&2
	} && exit 0 || exit 1
}

# `getopts` doesn't support long options so this will have to do.
while [ "$#" -gt 0 ]
do
	case "$1" in
		-c|--conf)
			CONF="$2"
			shift 2;;
		-c*)
			CONF="$(echo $1 | cut -c3-)"
			shift;;
		--conf=*)
			CONF="$(echo $1 | cut -c8-)"
			shift;;
		-v|--verbose)
			VERBOSE=1
			shift;;
		-h|--help) usage help;;
		-*) echo "# [freight] unknown switch: $1" >&2;;
		*) break;;
	esac
done
. freight-setup

# The non-option argument(s) following the last option are package files.
# Binary packages have only one but source packages require three.  When the
# last of these is found, the remaining arguments are each assumed to be
# `<manager>/<distro>` pairs for this (source) package.
while [ "$#" -gt 0 ]
do
	case "$1" in
		*.deb|*.dsc|*.orig.tar.gz|*.diff.gz)
			PATHNAMES="$PATHNAMES $1"
			shift;;
		*) break;;
	esac
done
[ -z "$PATHNAMES" ] && usage
[ -z "$*" ] && usage

# Create a working directory on the same device as the Freight library and
# copy this package there.  This used to be a link but is now a copy because
# later Freight commands will rely on the link count being reduced to one.
mkdir -p "$VARLIB"
TMP="$(mktemp -d "$VARLIB/work.$$.XXXXXXXXXX")"
trap "rm -rf \"$TMP\"" 0
for PATHNAME in $PATHNAMES
do
	cp "$PATHNAME" "$TMP/"
done

# Enter the Freight library directory so that items in `$@` may be given as
# absolute paths or as partial paths of the form `<manager>/<distro>` that
# are ultimately taken relative to the Freight library.
cd "$VARLIB"

# Hard link this package into every `<manager>/<distro>` given in `$@`.
# These links will later be used to compile the `Release` and `Packages`
# files in the Freight cache.
for PATHNAME in $PATHNAMES
do
	FILENAME="$(basename "$PATHNAME")"
	for DIRNAME in "$@"
	do
		mkdir -p "$DIRNAME"
		ln "$TMP/$FILENAME" "$DIRNAME/$FILENAME" 2>/dev/null &&
		echo "# [freight] added $PATHNAME to $DIRNAME" >&2 ||
		echo "# [freight] $DIRNAME already has $PATHNAME" >&2
	done
done
